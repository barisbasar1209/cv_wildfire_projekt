Alle Befehle markiere ich mit "..." , alles was in <...> steht ist zum selbsteinfügen. Die Zeichen werden entsprechend in der Praxis weggelassen

Einrichten 

	1. "pip3 install --upgrade"
	2. "pip install virtualenv"
	3. venvs Ordner erstellen für diese und alle weiteren virtuellen Umgebungen. Überall möglich aber am besten nicht innerhalb eines Projekts selbst
	4. im venvs ordner folgendes ausführen: virtualenv <venv-name-selbst-wählen> 
		
Aktivieren 

	Eine virtuelle Umgebung musst du zuerst aktivieren bevor du auf ihre Konfigurationen nutzen kannst. Tust du das nicht wirst du die globalen Einstellungen auf deinem System nutzen. Führe dazu folgenden Befehl aus, wenn du in dem Ordner bist in dem dein venv ordner ist. Du kannst das natürlich mit entsprechendem Pfad anpassen
	". venv/venvName/bin/activate"
	
	Achte hierbei auf den Punkt ganz vorne! Du kannst stattdessen auch "source" schreiben wenn dir das lieber ist.
	
	"source venv/venvName/bin/acitvate"

Deaktivieren

	Kannst du überall ausführen, klappt natürlich nur wenn die Umgebung vorher aktiv ist

	"deactivate"

Nutzen
	
	Hat im Prinzip denselben Sinn wie eine VM. Du kannst damit die Python version und die Paketversionen unabhängig vom Rest des Systems nutzen und konfigurieren. Ist besonders sinnvoll da sich sonst einige fiese Konflikte zwischen Versionen und Paketen auftreten werden. 

Sonstiges

	Die virtuelle Umgebung wird nicht auf Git gepusht. Was du allerdings pushen solltest ist ein requirements.txt file. In diesem stehen alle Konfigurationen drinnen. Erstelle dieses wie folgt in der Kommandozeile: 
	
	"pip freeze > requirements.txt"

	Vorsicht mit diesem Befehl überschreibst du auch die alte Version einer solchen Datei. Den Namen kannst du belibig anpassen. 

		

